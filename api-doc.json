{
    "openapi": "3.0.0",
    "info": {
        "title": "Job API",
        "version": "0.1"
    },
    "paths": {
        "/cronjob": {
            "get": {
                "tags": [
                    "CronJob"
                ],
                "description": "Returns a list of cronjobs",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CronJob"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "In case invalid parameters were provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "In case of an internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CronJob"
                ],
                "description": "Creates a cronjob",
                "operationId": "Abc\\Job\\Controller\\CronJobController::create",
                "requestBody": {
                    "description": "CronJob object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CronJob"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "In case invalid parameters were provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "In case of an internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cronjob/{id}": {
            "get": {
                "tags": [
                    "CronJob"
                ],
                "description": "Returns a cronjob",
                "operationId": "Abc\\Job\\Controller\\CronJobController::find",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique id of the cronjob",
                        "required": true,
                        "schema": {
                            "$ref": "#components/schemas/CronJob/properties/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "In case invalid parameters were provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "In case a cronjob with the given id is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "In case of an internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CronJob"
                ],
                "description": "Updates a cronjob",
                "operationId": "Abc\\Job\\Controller\\CronJobController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique id of the cronjob",
                        "required": true,
                        "schema": {
                            "$ref": "#components/schemas/CronJob/properties/id"
                        }
                    }
                ],
                "requestBody": {
                    "description": "CronJob object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CronJob"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "In case invalid parameters were provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "In case a cronjob with the given id is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "In case of an internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "CronJob"
                ],
                "description": "Deletes a cronjob",
                "operationId": "Abc\\Job\\Controller\\CronJobController::delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique id of the cronjob",
                        "required": true,
                        "schema": {
                            "$ref": "#components/schemas/CronJob/properties/id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "In case a cronjob with the given id is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "In case of an internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/job": {
            "get": {
                "tags": [
                    "Job"
                ],
                "description": "Returns a list of job results",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The unique id of the job",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status of the job",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "waiting",
                                "scheduled",
                                "running",
                                "complete",
                                "failed",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the job",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "externalId",
                        "in": "query",
                        "description": "The external id of the job",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Result"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "In case invalid parameters were provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "In case of an internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job"
                ],
                "description": "Processes a job",
                "operationId": "Abc\\Job\\Controller\\JobController::process",
                "requestBody": {
                    "description": "Job object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Job"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "In case invalid parameters were provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "In case of an internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/job/{id}": {
            "get": {
                "tags": [
                    "Job"
                ],
                "description": "Returns the result of a job",
                "operationId": "Abc\\Job\\Controller\\JobController::result",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique id of the job",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "In case the job with the given id is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "In case of an internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Job"
                ],
                "description": "Deletes a job",
                "operationId": "Abc\\Job\\Controller\\JobController::delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique id of the job",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "In case the job with the given id is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "In case of an internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/job/{id}/restart": {
            "put": {
                "tags": [
                    "Job"
                ],
                "description": "Restarts a job",
                "operationId": "Abc\\Job\\Controller\\JobController::restart",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique id of the job",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "In case the job with the given id is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "In case of an internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/job/{id}/cancel": {
            "put": {
                "tags": [
                    "Job"
                ],
                "description": "Cancels a job",
                "operationId": "Abc\\Job\\Controller\\JobController::cancel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique id of the job",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "In case the job with the given id is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "In case the job could not be cancelled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "In case of an internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/route": {
            "get": {
                "tags": [
                    "Route"
                ],
                "description": "Returns a list of route objects",
                "operationId": "Abc\\Job\\Controller\\RouteController::all",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Route"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "In case of an internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiProblem"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Route"
                ],
                "description": "Creates a route",
                "operationId": "Abc\\Job\\Controller\\RouteController::create",
                "requestBody": {
                    "description": "Route object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Route"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Route": {
                "description": "A Route defines queue and replyTo queue of a job",
                "properties": {
                    "name": {
                        "description": "The job name",
                        "type": "string"
                    },
                    "queue": {
                        "description": "The queue name",
                        "type": "string"
                    },
                    "replyTo": {
                        "description": "The name of the replyTo queue",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CronJob": {
                "description": "A job that is processed according to cronjob expression",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": "true"
                    },
                    "schedule": {
                        "description": "The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/Job/properties/type"
                    },
                    "name": {
                        "$ref": "#/components/schemas/Job/properties/name"
                    },
                    "input": {
                        "$ref": "#/components/schemas/Job/properties/input"
                    },
                    "externalId": {
                        "$ref": "#/components/schemas/Job/properties/externalId"
                    },
                    "children": {
                        "$ref": "#/components/schemas/Job/properties/children"
                    },
                    "updated": {
                        "description": "The datetime the cronjob was updated",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created": {
                        "description": "The datetime the cronjob was created",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Job": {
                "description": "A job to be processed",
                "properties": {
                    "type": {
                        "description": "The job type",
                        "type": "string",
                        "enum": [
                            "Job",
                            "Batch",
                            "Sequence"
                        ]
                    },
                    "name": {
                        "description": "The job name",
                        "type": "string"
                    },
                    "input": {
                        "description": "The job input",
                        "type": "string"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Job"
                        }
                    },
                    "allowFailure": {
                        "description": "Whether a job in a Sequence or Batch may fail",
                        "type": "boolean"
                    },
                    "externalId": {
                        "description": "An external identifier of the job",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "Result": {
                "description": "The result of a job",
                "properties": {
                    "type": {
                        "description": "The job type",
                        "type": "string",
                        "enum": [
                            "Job",
                            "Batch",
                            "Sequence"
                        ]
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "description": "The job name",
                        "type": "string"
                    },
                    "status": {
                        "description": "The job type",
                        "type": "string",
                        "enum": [
                            "waiting",
                            "scheduled",
                            "running",
                            "complete",
                            "failed",
                            "cancelled"
                        ]
                    },
                    "input": {
                        "description": "The job input",
                        "type": "string"
                    },
                    "output": {
                        "description": "The job output",
                        "type": "string"
                    },
                    "allowFailure": {
                        "description": "Whether a job in a Sequence or Batch may fail",
                        "type": "boolean"
                    },
                    "processingTime": {
                        "type": "number",
                        "format": "float"
                    },
                    "externalId": {
                        "description": "An external identifier of the job",
                        "type": "string",
                        "format": "uuid"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Result"
                        }
                    },
                    "completed": {
                        "description": "The datetime the job completed",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "The datetime the job was updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created": {
                        "description": "The datetime the job was created",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ApiProblem": {
                "description": "Problem Details for HTTP APIs according to RFC7 807",
                "properties": {
                    "type": {
                        "description": " A URI reference [RFC3986] that identifies the problem type.",
                        "type": "string"
                    },
                    "title": {
                        "description": "A short, human-readable summary of the problem type.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.",
                        "type": "integer"
                    },
                    "detail": {
                        "description": "A human-readable explanation specific to this occurrence of the problem.",
                        "type": "string"
                    },
                    "instance": {
                        "description": "A URI reference that identifies the specific occurrence of the problem.",
                        "type": "string"
                    },
                    "invalidParams": {
                        "type": "array",
                        "items": {
                            "title": "InvalidParameter",
                            "properties": {
                                "name": {
                                    "description": "The name or path of the invalid property",
                                    "type": "string"
                                },
                                "reason": {
                                    "description": "A reason explaining the validation constraint violation",
                                    "type": "string"
                                },
                                "valie": {
                                    "description": "The value that was provided",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "500": {
                "description": "In case of an internal server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiProblem"
                        }
                    }
                }
            }
        }
    }
}